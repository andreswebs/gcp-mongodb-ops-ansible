---
- name: "Ensure {{ mongodb_storage_path }} exists"
  ansible.builtin.file:
    path: "{{ mongodb_storage_path }}"
    state: directory
    owner: mongodb
    group: mongodb
  tags:
    - mongodb
    - mongodb-storage

- name: Install dependencies
  ansible.builtin.apt:
    name:
      - apt-transport-https
  tags:
    - mongodb

- name: DEB architecture
  ansible.builtin.shell: dpkg --print-architecture
  register: deb_architecture
  changed_when: false
  tags:
    - mongodb

- name: MongoDB | key
  ansible.builtin.get_url:
    url: "{{ mongodb_key_url }}"
    dest: "{{ mongodb_key_file }}"
  tags:
    - mongodb

- name: MongoDB | apt source
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ deb_architecture.stdout }} signed-by={{ mongodb_key_file }}] https://repo.mongodb.org/apt/ubuntu {{ ansible_distribution_release }}/mongodb-org/{{ mongodb_version }} multiverse"
    state: present
    filename: "mongodb-org-{{ mongodb_version }}"
  tags:
    - mongodb

- name: MongoDB | install packages
  ansible.builtin.apt:
    update_cache: yes
    name:
      - mongodb-org
      - mongodb-org-server
      - mongodb-org-shell
      - mongodb-org-mongos
      - mongodb-org-tools
      - python3-pymongo
  tags:
    - mongodb

- name: Create /etc/systemd/system/mongod.service.d
  ansible.builtin.file:
    path: /etc/systemd/system/mongod.service.d
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - mongodb
    - mongodb-service-config

- name: Update mongod.service configuration
  ansible.builtin.copy:
    src: systemd-override-mongod.conf
    dest: /etc/systemd/system/mongod.service.d/override.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - systemctl daemon-reload
    - systemctl restart mongod
  tags:
    - mongodb
    - mongodb-service-config

- name: Set /etc/logrotate.d/mongod
  ansible.builtin.copy:
    src: logrotate-mongod.conf
    dest: /etc/logrotate.d/mongod
    owner: root
    group: root
    mode: '0644'
  tags:
    - mongodb
    - mongodb-logrotate

- ansible.builtin.import_tasks: tls.yml

- name: "Retrieve secret {{ mongodb_secret_name_tls_key_password }}"
  ansible.builtin.command: "gcloud secrets versions access latest --secret {{ mongodb_secret_name_tls_key_password }}"
  connection: local
  delegate_to: localhost
  become: no
  run_once: true
  check_mode: false
  changed_when: false
  no_log: "{{ not display_diff_secrets }}"
  register: mongodb_tls_key_password
  environment:
    CLOUDSDK_CORE_PROJECT: "{{ lookup('ansible.builtin.env', 'CLOUDSDK_CORE_PROJECT') }}"
  tags:
    - mongodb
    - mongodb-config

- name: Set /etc/mongod.conf
  ansible.builtin.template:
    src: mongod_replicaset.conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - systemctl restart mongod
  no_log: "{{ not display_diff_secrets }}"
  tags:
    - mongodb
    - mongodb-config

- name: Start and enable service
  ansible.builtin.service:
    name: mongod.service
    state: started
    enabled: yes
  tags:
    - mongodb
    - mongodb-service
    - mongodb-service-config
